#!/bin/bash

# Polynomial Regression Models - Master Job Runner
# This script provides guidance for running all polynomial regression models

echo "üéØ Polynomial Regression Models for CNN Execution Time Prediction"
echo "================================================================="
echo ""
echo "This script guides you through training 4 different polynomial regression models:"
echo "  1. Linear Regression (fastest, baseline)"
echo "  2. Ridge Regression (L2 regularization)"
echo "  3. Lasso Regression (L1 regularization, feature selection)"
echo "  4. ElasticNet Regression (L1+L2 regularization, most robust)"
echo ""

# Check if required files exist
echo "üîç Checking required files..."
MISSING_FILES=0

if [ ! -f "combined.csv" ]; then
    echo "‚ùå Missing: combined.csv"
    MISSING_FILES=$((MISSING_FILES + 1))
else
    echo "‚úÖ Found: combined.csv"
fi

SCRIPTS=("polynomial_linear.py" "polynomial_ridge.py" "polynomial_lasso.py" "polynomial_elasticnet.py" "compare_models.py")
JOB_SCRIPTS=("job_linear.sh" "job_ridge.sh" "job_lasso.sh" "job_elasticnet.sh" "job_compare.sh")

for script in "${SCRIPTS[@]}"; do
    if [ ! -f "$script" ]; then
        echo "‚ùå Missing: $script"
        MISSING_FILES=$((MISSING_FILES + 1))
    else
        echo "‚úÖ Found: $script"
    fi
done

for job in "${JOB_SCRIPTS[@]}"; do
    if [ ! -f "$job" ]; then
        echo "‚ùå Missing: $job"
        MISSING_FILES=$((MISSING_FILES + 1))
    else
        echo "‚úÖ Found: $job"
    fi
done

if [ $MISSING_FILES -gt 0 ]; then
    echo ""
    echo "‚ùå ERROR: $MISSING_FILES required files are missing!"
    echo "Please ensure all files are in the current directory."
    exit 1
fi

echo ""
echo "‚úÖ All required files found!"
echo ""

# Show job submission commands
echo "üöÄ JOB SUBMISSION WORKFLOW"
echo "=========================="
echo ""
echo "Run these commands in order (wait for each to complete):"
echo ""

echo "1Ô∏è‚É£  Submit Linear Regression (fastest, ~30 min):"
echo "    sbatch job_linear.sh"
echo "    Expected time: 5-30 minutes"
echo "    Resources: 4 CPUs, 8GB RAM"
echo ""

echo "2Ô∏è‚É£  Submit Ridge Regression (L2 regularization, ~1 hour):"
echo "    sbatch job_ridge.sh"
echo "    Expected time: 10-60 minutes"
echo "    Resources: 6 CPUs, 12GB RAM"
echo ""

echo "3Ô∏è‚É£  Submit Lasso Regression (L1 regularization, ~1 hour):"
echo "    sbatch job_lasso.sh"
echo "    Expected time: 10-60 minutes"
echo "    Resources: 6 CPUs, 12GB RAM"
echo ""

echo "4Ô∏è‚É£  Submit ElasticNet Regression (L1+L2, ~1.5 hours):"
echo "    sbatch job_elasticnet.sh"
echo "    Expected time: 15-90 minutes"
echo "    Resources: 8 CPUs, 16GB RAM"
echo ""

echo "5Ô∏è‚É£  Compare All Models (~15 min):"
echo "    sbatch job_compare.sh"
echo "    Expected time: 1-5 minutes"
echo "    Resources: 2 CPUs, 4GB RAM"
echo ""

echo "üìä MONITORING JOBS"
echo "=================="
echo ""
echo "Check job status:"
echo "  squeue -u \$USER"
echo ""
echo "View job output (replace XXXX with job ID):"
echo "  tail -f poly_linear_training.out"
echo "  tail -f poly_ridge_training.out"
echo "  tail -f poly_lasso_training.out"
echo "  tail -f poly_elasticnet_training.out"
echo "  tail -f poly_compare_models.out"
echo ""

echo "‚ö° QUICK START (if you want to run them all at once):"
echo "===================================================="
echo ""
echo "Submit all jobs (they will queue automatically):"
echo "  sbatch job_linear.sh && \\"
echo "  sbatch job_ridge.sh && \\"
echo "  sbatch job_lasso.sh && \\"
echo "  sbatch job_elasticnet.sh"
echo ""
echo "Wait for all to complete, then:"
echo "  sbatch job_compare.sh"
echo ""

echo "üìà EXPECTED RESULTS"
echo "=================="
echo ""
echo "Each model job will create a results directory containing:"
echo "  ‚Ä¢ {model}_training_results.csv - Detailed metrics"
echo "  ‚Ä¢ best_{model}_model.joblib - Trained model"
echo "  ‚Ä¢ {model}_polynomial_results.png - Visualization"
echo "  ‚Ä¢ training_output.log - Training log"
echo ""
echo "The comparison job will create:"
echo "  ‚Ä¢ polynomial_models_comparison.csv - Model comparison"
echo "  ‚Ä¢ polynomial_models_comparison.png - Comparison visualization"
echo ""

echo "üéØ MODEL CHARACTERISTICS"
echo "========================"
echo ""
echo "Linear:     Fast baseline, no regularization"
echo "Ridge:      L2 regularization, good for correlated features"
echo "Lasso:      L1 regularization, automatic feature selection"
echo "ElasticNet: L1+L2 combined, most robust and flexible"
echo ""

echo "üí° TIPS"
echo "======="
echo ""
echo "‚Ä¢ Start with Linear to test your setup quickly"
echo "‚Ä¢ Ridge usually performs well for CNN prediction tasks"
echo "‚Ä¢ Use Lasso if you suspect many irrelevant features"
echo "‚Ä¢ ElasticNet often gives the most robust results"
echo "‚Ä¢ Always run the comparison to see which model is best"
echo ""

echo "üîß TROUBLESHOOTING"
echo "=================="
echo ""
echo "If jobs are taking too long:"
echo "  ‚Ä¢ Check the README_POLYNOMIAL.md for optimization tips"
echo "  ‚Ä¢ Consider reducing hyperparameter grids"
echo "  ‚Ä¢ Monitor resource usage with 'seff <job_id>'"
echo ""

echo "If you get memory errors:"
echo "  ‚Ä¢ Check your dataset size in combined.csv"
echo "  ‚Ä¢ Consider sampling your data if it's very large"
echo ""

echo "If jobs fail:"
echo "  ‚Ä¢ Check the .out files for error messages"
echo "  ‚Ä¢ Ensure your virtual environment (ai3_env) is set up"
echo "  ‚Ä¢ Verify all required packages are installed"
echo ""

echo "üéâ READY TO START!"
echo "=================="
echo ""
echo "Choose your approach:"
echo ""
echo "Option A - Conservative (recommended):"
echo "  Run one job at a time, wait for completion, then run the next"
echo ""
echo "Option B - All at once:"
echo "  Submit all jobs simultaneously (they'll queue)"
echo ""
echo "Start with: sbatch job_linear.sh"
echo ""
echo "Good luck with your polynomial regression training! üöÄ" 